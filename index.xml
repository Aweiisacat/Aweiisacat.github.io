<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://Aweiisacat.github.io/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Wed, 08 Jul 2020 18:18:54 +0800</lastBuildDate>
    
	<atom:link href="http://Aweiisacat.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>RWD與AWD的差別</title>
      <link>http://Aweiisacat.github.io/blog/rwd%E8%88%87awd%E7%9A%84%E5%B7%AE%E5%88%A5/</link>
      <pubDate>Wed, 08 Jul 2020 18:18:54 +0800</pubDate>
      
      <guid>http://Aweiisacat.github.io/blog/rwd%E8%88%87awd%E7%9A%84%E5%B7%AE%E5%88%A5/</guid>
      <description>前言 在這個時代用手機看網頁已經是稀鬆平常事，身為前後端也必須要了解基本的 RWD ，但在有一天讓我知道了 AWD ，在好奇心的驅使下想與 RWD 進行比較，為什麼 AWD 適合用在什麼網站?為什麼都不會考慮使用 AWD ?
RWD (Responsive Web Design) 響應式網頁設計 與 AWD (Adaptive Web Design) 自適應式網頁設計 的差別以及優缺點 RWD與AWD在開發上， AWD 是屬於比較麻煩的開發模式，因為它在各個裝置下都有不同的 CSS 檔，與RWD相比它只有一種 CSS 檔，所以從這邊可以了解到AWD開發是非常耗時耗力的一種網頁設計方式。
效能: RWD :因為所有的裝置都使用同一個 CSS 碼，所以較無法針對行動裝置做圖片顯示的最佳化，加上 RWD 網頁的機制是將資訊先下載後，再根據裝置寬度重新排列，所以會較慢。
AWD :行動裝置網頁載入更快 可針對行動裝置而做優化，將原本的大圖縮減成最合適的尺寸，減少不必要的大圖，就能加快行動裝置的網頁 loading。
維護效率: RWD :如果在大型專案裡 CSS 裡要維護會非常困難，因為只要改錯一個東西就會可能影響到其他不需要修改的地方導致畫面爆炸。
AWD :因為 AWD 在各個裝置都有相對應的 CSS 檔，維護上很好維護，不用東找西找讓自己眼睛痛。
結尾: 研究下來發現使用 AWD 或 RWD 沒有所謂的好壞，因應專案的關係去選擇哪一種設計模式適合還有長久問題，但現在手機硬體一年比一年好的情況下 AWD 設計理念下特別突出的 UI/UX 也逐漸變得不是特別強勢，加上還有 AWD 價格比較貴，眾多才會選擇 RWD ，變成業界上的趨勢。
參考資料 什麼是適應式網頁設計(AWD)?
RWD和AWD是啥?差別又是什麼?前端工程師課程大解密!</description>
    </item>
    
    <item>
      <title>CORS 了解跨來源資源共享</title>
      <link>http://Aweiisacat.github.io/blog/cors/</link>
      <pubDate>Sat, 04 Jul 2020 17:00:22 +0800</pubDate>
      
      <guid>http://Aweiisacat.github.io/blog/cors/</guid>
      <description>前言 如果曾經你做過一些AJAX，你可能會所謂的CORS error，就要在後端設定CORS允許操作任何一切，但是有想過CORS是幹嘛的嗎?只是單純讓前端頭痛的方法嗎?它跟安全性有什麼關係?如果是，那為什麼我們還要進行身分驗證?如果沒有是為了解決什麼目的?
了解CORS之前先來了解所謂的同源政策(Same Origin Policy) SOP是由所有現代瀏覽器實施的安全措施，它不允許從一個來源加載的腳本和資源與另一個來源進行交互。
這是對Javascript的一個限制，對HTML標籤是沒有作用的。
舉個例子:
你的網站是http://www.example.com，你無法向http://www.test.com發出XHR requests
那為什麼不行就要先了解網域的格式
舉個範例網址:
http://www.example.com/index.html
http/https是協定、example.com是域名、index.html是檔案路徑、通訊埠(port)通常http預設的port是80
只要&amp;quot;不同協定&amp;quot;或&amp;quot;域名&amp;quot;或者是&amp;quot;port&amp;quot;都會被認定不同源
http://www.example.com/background.html 認定同源，原因是檔案路徑不影響
https://www.example.com/index.html 認定不同源，原因是不同協定
http://example.com/index.html 認定不同源，原因是不同域名
http://example.com:81/index.html 認定不同源，原因是不同port
了解了SOP就來看看什麼是CORS
CORS(跨來源資源共享) CORS就像是一個管理員它具備著SOP的觀念，只要它認不得這個網域域名它就認不得你，你就得滾
舉個例子:
你facebook網頁裡，你不小心點了一個惡意網站它對facebook發了一個請求來取得你的個人資料 or 聊天紀錄等等，這時候facebook的管理員它不認識這個網址，對方也拿不到它想要的資料了。
那要怎麼操作CORS? 舉個例子:
Ruby on Rails有個rake-cors gem來設定cors設定
#config/application.rb config.middleware.insert_before 0, Rack::Cors do allow do origins /\Aexample.com\z/ #要用正規表達式來抓網站 resource &amp;#39;/api/v1/&amp;#39;, headers: :any, methods: [:get, :post, :options] end end 這邊origin設定example.com，類似我開白名單，名單內容有這個人就可以進來在我的網站撈取我網站的內容</description>
    </item>
    
    <item>
      <title>Ubuntu Setting(WSL)</title>
      <link>http://Aweiisacat.github.io/blog/ubuntunotebook/</link>
      <pubDate>Wed, 01 Jul 2020 13:37:36 +0800</pubDate>
      
      <guid>http://Aweiisacat.github.io/blog/ubuntunotebook/</guid>
      <description>如何在Ubuntu 設定標題以及顯示git分支 第一步就是打開你的終端機確認自己的位子是在&amp;quot;~&amp;quot;位子，如果是Windows開發者可能會在&amp;rdquo;/mnt/c/Users/你的User名稱&amp;quot;打個
cd 就可以回到&amp;quot;~&amp;quot;位子
第二步就是指令
vim .bashrc #進入編輯.bashrc的檔案 .bashrc檔案裡是關於bash的設定就是你Terminal本身，接下來就是案方向鍵案到最下面的空白處開始我們的設定
#修改tab title function title() { if [[ -z &amp;#34;$ORIG&amp;#34; ]]; then ORIG=$PS1 fi TITLE=&amp;#34;\[\e]2;$*\a\]&amp;#34; PS1=${ORIG}${TITLE} } #怎麼使用title，就在bash裡打 title &amp;#34;tab name&amp;#34;這樣就完成了 # 顯示git 分支 git_branch() { git branch 2&amp;gt; /dev/null |sed -e &amp;#39;/^[^*]/d&amp;#39; -e &amp;#39;s/* \(.*\)/(\1)/&amp;#39; } export PS1=&amp;#34;\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\[\033[0;31m\]\$(git_branch)\[\033[00m\]\$&amp;#34; #關於PS1值的指令請打 echo $PS1 #\[\033[0;31m\]\$(git_branch) 前面的\[\033[0;31m\]\是屬於bash的色碼之後看你怎麼去設定色碼 bash色碼
為了造福Windows開發者 五月底已經可以更新最新版本的Windows系統，並把WSL出到了WSL2，詳細資訊可以看官方文件WSL2以及WSL差別，只要知道不再是虛擬Linux系統，而是一個活生生的Linux系統在你的電腦裡，並且跑得更快。
切記要開發的時候檔案請放在Linux資料夾內，如果不知道怎麼去，到自己的檔案總管把原本的路徑刪掉打上
\\wsl$ 就會看到Ubuntu的資料夾，點進去之後的home/user就是你bash打開的&amp;quot;~&amp;quot;環境，之後要用WSL開發都要在這個底下開發才會快!!!
再來就是Windows商店出了一個叫做Windows Terminal，可以進行分頁式的bash
這個東西就是學Mac的Terminal，Windows終於可以用啦!!!
所以才會用到設定分頁名稱，這樣可以知道哪一個分頁在做什麼工作
目前這個軟件還在beta階段，叫做PowerToys，它可以進行全棧搜尋，也是跟Mac一樣系統，但是目前做的搜尋功能還不是很OK，用不用就看個人了XD</description>
    </item>
    
    <item>
      <title>Astro Camp 第四屆 模擬面試心得</title>
      <link>http://Aweiisacat.github.io/blog/%E9%9D%A2%E8%A9%A6%E6%A8%A1%E6%93%AC/</link>
      <pubDate>Tue, 12 May 2020 00:11:09 +0800</pubDate>
      
      <guid>http://Aweiisacat.github.io/blog/%E9%9D%A2%E8%A9%A6%E6%A8%A1%E6%93%AC/</guid>
      <description>在履歷方面工作經歷和學歷都要擺在最下面
畢竟這對我來說不是一個特別搶眼的項目才建議我擺在最下面
在履歷上的技能樹上 ruby on rails 多寫一些gem
 你用過多少gem才能知道你多會  css 能寫一些框架
 也要去了解這個框架上在開發的便利性以及怎麼用這個框架去開發  js 三大框架學一個
 要去透徹了解那個框架，還有他的觀念  作品集
 url要擺出來介紹 內容要多包裝 有專有名詞  github的日記
 理想是能每天綠就綠，最少最少一周五天深綠。  面試過程:
 口條不清楚  五倍紅寶石學習過程
 對哪一塊有興趣，以及學習過程了解了什麼  專案:
  內容做過什麼可以給面試官看
  做專案的過程遇到的問題如何解決
  解釋你做這個專案的目的是為了解決什麼問題
  說明的過程要舉個例子，更加有說服力
  學習的過程:
 遇到問題先去上網查，並把網路上的內容去理解這段code or 語法 是解決什麼問題  面試最愛考的題目:
 你遇過最難的題目是什麼  說故事:
  背景
  我做了什麼</description>
    </item>
    
    <item>
      <title>Ruby on Rails postgresql在ubuntu遇到的問題</title>
      <link>http://Aweiisacat.github.io/blog/firstblog/</link>
      <pubDate>Sun, 10 May 2020 22:18:45 +0800</pubDate>
      
      <guid>http://Aweiisacat.github.io/blog/firstblog/</guid>
      <description>當你安裝postgres時bundle install不順的時候就是你缺少一個套件就是
sudo apt-get install libpq-dev
開啟專案的時候一定要養成好習慣先開啟postgresql的伺服器:
sudo service postgresql start
錯誤還是出現說:FATAL: role “username” does not exist 找不到使用者的話，要去創跟你ubuntu一模一樣的使用者ID，指令為:
sudo -u postgres createuser &amp;quot;username&amp;quot;
當你進入專案時噴出FATAL: database “project_name” does not exist，那就rails db:create
但是如果權限不夠會噴出PG::InsufficientPrivilege: ERROR: permission denied to create database Couldn’t create ‘project_name’ database. Please check your configuration.那就要去修改你的使用者權限。指令為:
sudo su - postgres
dropuser &amp;quot;user_name&amp;quot;
createuser -s &amp;quot;user_name&amp;quot; \\-s意思給這個user賦予superuser
如果你的postgres的使用者沒設定密碼的話請打以下
sudo -u postgres psql \\進入psql環境
postgres=# \\就代表你進去環境內了
打上\password &amp;quot;user_name&amp;quot; \\這樣就可以改密碼囉!
參考資料
ruby-china.org
blog.gtwang
stackoverflow</description>
    </item>
    
  </channel>
</rss>