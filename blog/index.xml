<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Blog on </title>
    <link>http://Aweiisacat.github.io/blog/</link>
    <description>Recent content in My Blog on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Wed, 01 Jul 2020 13:37:36 +0800</lastBuildDate>
    
	<atom:link href="http://Aweiisacat.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ubuntu Setting(WSL)</title>
      <link>http://Aweiisacat.github.io/blog/ubuntunotebook/</link>
      <pubDate>Wed, 01 Jul 2020 13:37:36 +0800</pubDate>
      
      <guid>http://Aweiisacat.github.io/blog/ubuntunotebook/</guid>
      <description>如何在Ubuntu 設定標題以及顯示git分支 第一步就是打開你的終端機確認自己的位子是在&amp;quot;~&amp;quot;位子，如果是Windows開發者可能會在&amp;rdquo;/mnt/c/Users/你的User名稱&amp;quot;打個
cd 就可以回到&amp;quot;~&amp;quot;位子
第二步就是指令
vim .bashrc #進入編輯.bashrc的檔案 .bashrc檔案裡是關於bash的設定就是你Terminal本身，接下來就是案方向鍵案到最下面的空白處開始我們的設定
#修改tab title function title() { if [[ -z &amp;#34;$ORIG&amp;#34; ]]; then ORIG=$PS1 fi TITLE=&amp;#34;\[\e]2;$*\a\]&amp;#34; PS1=${ORIG}${TITLE} } #怎麼使用title，就在bash裡打 title &amp;#34;tab name&amp;#34;這樣就完成了 # 顯示git 分支 git_branch() { git branch 2&amp;gt; /dev/null |sed -e &amp;#39;/^[^*]/d&amp;#39; -e &amp;#39;s/* \(.*\)/(\1)/&amp;#39; } export PS1=&amp;#34;\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\[\033[0;31m\]\$(git_branch)\[\033[00m\]\$&amp;#34; #關於PS1值的指令請打 echo $PS1 #\[\033[0;31m\]\$(git_branch) 前面的\[\033[0;31m\]\是屬於bash的色碼之後看你怎麼去設定色碼 bash色碼
為了造福Windows開發者 五月底已經可以更新最新版本的Windows系統，並把WSL出到了WSL2，詳細資訊可以看官方文件WSL2以及WSL差別，只要知道不再是虛擬Linux系統，而是一個活生生的Linux系統在你的電腦裡，並且跑得更快。
切記要開發的時候檔案請放在Linux資料夾內，如果不知道怎麼去，到自己的檔案總管把原本的路徑刪掉打上
\\wsl$ 就會看到Ubuntu的資料夾，點進去之後的home/user就是你bash打開的&amp;quot;~&amp;quot;環境，之後要用WSL開發都要在這個底下開發才會快!!!
再來就是Windows商店出了一個叫做Windows Terminal，可以進行分頁式的bash
這個東西就是學Mac的Terminal，Windows終於可以用啦!!!
所以才會用到設定分頁名稱，這樣可以知道哪一個分頁在做什麼工作
目前這個軟件還在beta階段，叫做PowerToys，它可以進行全棧搜尋，也是跟Mac一樣系統，但是目前做的搜尋功能還不是很OK，用不用就看個人了XD</description>
    </item>
    
    <item>
      <title>Astro Camp 第四屆 模擬面試心得</title>
      <link>http://Aweiisacat.github.io/blog/%E9%9D%A2%E8%A9%A6%E6%A8%A1%E6%93%AC/</link>
      <pubDate>Tue, 12 May 2020 00:11:09 +0800</pubDate>
      
      <guid>http://Aweiisacat.github.io/blog/%E9%9D%A2%E8%A9%A6%E6%A8%A1%E6%93%AC/</guid>
      <description>在履歷方面工作經歷和學歷都要擺在最下面
畢竟這對我來說不是一個特別搶眼的項目才建議我擺在最下面
在履歷上的技能樹上 ruby on rails 多寫一些gem
 你用過多少gem才能知道你多會  css 能寫一些框架
 也要去了解這個框架上在開發的便利性以及怎麼用這個框架去開發  js 三大框架學一個
 要去透徹了解那個框架，還有他的觀念  作品集
 url要擺出來介紹 內容要多包裝 有專有名詞  github的日記
 理想是能每天綠就綠，最少最少一周五天深綠。  面試過程:
 口條不清楚  五倍紅寶石學習過程
 對哪一塊有興趣，以及學習過程了解了什麼  專案:
  內容做過什麼可以給面試官看
  做專案的過程遇到的問題如何解決
  解釋你做這個專案的目的是為了解決什麼問題
  說明的過程要舉個例子，更加有說服力
  學習的過程:
 遇到問題先去上網查，並把網路上的內容去理解這段code or 語法 是解決什麼問題  面試最愛考的題目:
 你遇過最難的題目是什麼  說故事:
  背景
  我做了什麼</description>
    </item>
    
    <item>
      <title>Ruby on Rails postgresql在ubuntu遇到的問題</title>
      <link>http://Aweiisacat.github.io/blog/firstblog/</link>
      <pubDate>Sun, 10 May 2020 22:18:45 +0800</pubDate>
      
      <guid>http://Aweiisacat.github.io/blog/firstblog/</guid>
      <description>當你安裝postgres時bundle install不順的時候就是你缺少一個套件就是
sudo apt-get install libpq-dev
開啟專案的時候一定要養成好習慣先開啟postgresql的伺服器:
sudo service postgresql start
錯誤還是出現說:FATAL: role “username” does not exist 找不到使用者的話，要去創跟你ubuntu一模一樣的使用者ID，指令為:
sudo -u postgres createuser &amp;quot;username&amp;quot;
當你進入專案時噴出FATAL: database “project_name” does not exist，那就rails db:create
但是如果權限不夠會噴出PG::InsufficientPrivilege: ERROR: permission denied to create database Couldn’t create ‘project_name’ database. Please check your configuration.那就要去修改你的使用者權限。指令為:
sudo su - postgres
dropuser &amp;quot;user_name&amp;quot;
createuser -s &amp;quot;user_name&amp;quot; \\-s意思給這個user賦予superuser
如果你的postgres的使用者沒設定密碼的話請打以下
sudo -u postgres psql \\進入psql環境
postgres=# \\就代表你進去環境內了
打上\password &amp;quot;user_name&amp;quot; \\這樣就可以改密碼囉!
參考資料
ruby-china.org
blog.gtwang
stackoverflow</description>
    </item>
    
  </channel>
</rss>